{"ast":null,"code":"var _jsxFileName = \"/home/paulo/gh-pages/TrybeTunes/src/components/MusicCard.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from '../pages/Loading';\nimport '../css/MusicCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      favorites: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.getFavs = this.getFavs.bind(this);\n    this.favCheckbox = this.favCheckbox.bind(this);\n  }\n\n  componentDidMount() {\n    this.getFavs();\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      music,\n      onChange\n    } = this.props;\n    this.setState({\n      loading: true\n    });\n\n    if (target.checked) {\n      addSong(music).then(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    } else {\n      removeSong(music).then(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    }\n\n    this.getFavs();\n    onChange();\n  }\n\n  getFavs() {\n    getFavoriteSongs().then(songs => {\n      this.setState({\n        favorites: songs\n      });\n    });\n  }\n\n  favCheckbox(trackId, favorites) {\n    const checked = favorites.some(song => song.trackId === trackId);\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: trackId,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"no-display\",\n        children: \"Favorita\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `${checked ? 'fas text-danger' : 'far'} fa-heart`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: trackId,\n        type: \"checkbox\",\n        name: \"favorite\",\n        \"data-testid\": `checkbox-music-${trackId}`,\n        onChange: this.handleChange,\n        checked: checked,\n        className: \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const {\n      music: {\n        trackName,\n        previewUrl,\n        trackId\n      }\n    } = this.props;\n    const {\n      loading,\n      favorites\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"row ms-2 my-2 border rounded align-items-center cardColor ps-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"col-5 h6 m-0 p-0\",\n        children: trackName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        className: \"col-5 p-0\",\n        \"data-testid\": \"audio-component\",\n        src: previewUrl,\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"track\", {\n          kind: \"captions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), \"O seu navegador n\\xE3o suporta o elemento\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2 text-center p-0\",\n        children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 22\n        }, this) : this.favCheckbox(trackId, favorites)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMusicCard.propTypes = {\n  music: PropTypes.shape({\n    trackName: PropTypes.string.isRequired,\n    previewUrl: PropTypes.string.isRequired,\n    trackId: PropTypes.number.isRequired\n  }).isRequired,\n  onChange: PropTypes.func\n};\nMusicCard.defaultProps = {\n  onChange: () => {}\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/paulo/gh-pages/TrybeTunes/src/components/MusicCard.jsx"],"names":["React","PropTypes","addSong","removeSong","getFavoriteSongs","Loading","MusicCard","Component","constructor","props","state","loading","favorites","handleChange","bind","getFavs","favCheckbox","componentDidMount","target","music","onChange","setState","checked","then","songs","trackId","some","song","render","trackName","previewUrl","propTypes","shape","string","isRequired","number","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from '../pages/Loading';\nimport '../css/MusicCard.css';\n\nclass MusicCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      favorites: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.getFavs = this.getFavs.bind(this);\n    this.favCheckbox = this.favCheckbox.bind(this);\n  }\n\n  componentDidMount() {\n    this.getFavs();\n  }\n\n  handleChange({ target }) {\n    const { music, onChange } = this.props;\n    this.setState({\n      loading: true,\n    });\n    if (target.checked) {\n      addSong(music).then(() => {\n        this.setState({ loading: false });\n      });\n    } else {\n      removeSong(music).then(() => {\n        this.setState({ loading: false });\n      });\n    }\n    this.getFavs();\n    onChange();\n  }\n\n  getFavs() {\n    getFavoriteSongs().then((songs) => {\n      this.setState({ favorites: songs });\n    });\n  }\n\n  favCheckbox(trackId, favorites) {\n    const checked = favorites.some((song) => song.trackId === trackId);\n    return (\n      <label htmlFor={ trackId }>\n        <span className=\"no-display\">Favorita</span>\n        <i className={ `${checked ? 'fas text-danger' : 'far'} fa-heart` } />\n        <input\n          id={ trackId }\n          type=\"checkbox\"\n          name=\"favorite\"\n          data-testid={ `checkbox-music-${trackId}` }\n          onChange={ this.handleChange }\n          checked={ checked }\n          className=\"d-none\"\n        />\n      </label>\n    );\n  }\n\n  render() {\n    const { music: { trackName, previewUrl, trackId } } = this.props;\n    const { loading, favorites } = this.state;\n    return (\n      <section className=\"row ms-2 my-2 border rounded align-items-center cardColor ps-4\">\n        <span className=\"col-5 h6 m-0 p-0\">{ trackName }</span>\n        <audio\n          className=\"col-5 p-0\"\n          data-testid=\"audio-component\"\n          src={ previewUrl }\n          controls\n        >\n          <track kind=\"captions\" />\n          O seu navegador não suporta o elemento\n          <code>audio</code>\n          .\n        </audio>\n        <div className=\"col-2 text-center p-0\">\n          {loading ? <Loading />\n            : this.favCheckbox(trackId, favorites)}\n        </div>\n      </section>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  music: PropTypes.shape({\n    trackName: PropTypes.string.isRequired,\n    previewUrl: PropTypes.string.isRequired,\n    trackId: PropTypes.number.isRequired,\n  }).isRequired,\n  onChange: PropTypes.func,\n};\n\nMusicCard.defaultProps = {\n  onChange: () => {},\n};\n\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}