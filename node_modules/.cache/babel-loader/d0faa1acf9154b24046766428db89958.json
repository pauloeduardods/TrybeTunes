{"ast":null,"code":"var _jsxFileName = \"/home/paulo/gh-pages/TrybeTunes/src/pages/Album.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\nimport MusicCard from '../components/MusicCard';\nimport '../css/Album.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      musics: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      }\n    } = this.props;\n    getMusics(id).then(musics => this.setState({\n      musics,\n      loading: false\n    }));\n  }\n\n  render() {\n    const {\n      loading,\n      musics\n    } = this.state;\n    let cardClass = 'col-xs-12 col-sm-4 d-flex ';\n    cardClass += 'flex-column justify-content-center align-items-center border-cards';\n\n    if (musics.length > 0) {\n      const {\n        artworkUrl100,\n        collectionName,\n        artistName\n      } = musics[0];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"page-album\",\n        className: \"container py-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: cardClass,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"album-fixed\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: artworkUrl100,\n                alt: collectionName,\n                className: \"album-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-center\",\n                \"data-testid\": \"artist-name\",\n                children: artistName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-center\",\n                \"data-testid\": \"album-name\",\n                children: collectionName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"col-xs-12 col-sm-8\",\n            children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 26\n            }, this) : musics.slice(1).map((music, index) => /*#__PURE__*/_jsxDEV(MusicCard, {\n              music: music\n            }, `${music.trackId}-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/paulo/gh-pages/TrybeTunes/src/pages/Album.jsx"],"names":["React","PropTypes","getMusics","Loading","MusicCard","Album","Component","constructor","state","musics","loading","componentDidMount","match","params","id","props","then","setState","render","cardClass","length","artworkUrl100","collectionName","artistName","slice","map","music","index","trackId","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV;AAAT,QAAgC,KAAKC,KAA3C;AACAb,IAAAA,SAAS,CAACY,EAAD,CAAT,CAAcE,IAAd,CAAoBP,MAAD,IAAY,KAAKQ,QAAL,CAAc;AAAER,MAAAA,MAAF;AAAUC,MAAAA,OAAO,EAAE;AAAnB,KAAd,CAA/B;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA,OAAF;AAAWD,MAAAA;AAAX,QAAsB,KAAKD,KAAjC;AACA,QAAIW,SAAS,GAAG,4BAAhB;AACAA,IAAAA,SAAS,IAAI,oEAAb;;AACA,QAAIV,MAAM,CAACW,MAAP,GAAgB,CAApB,EAAuB;AACrB,YAAM;AACJC,QAAAA,aADI;AAEJC,QAAAA,cAFI;AAGJC,QAAAA;AAHI,UAGWd,MAAM,CAAC,CAAD,CAHvB;AAIA,0BACE;AAAK,uBAAY,YAAjB;AAA8B,QAAA,SAAS,EAAC,gBAAxC;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA,kCACE;AAAS,YAAA,SAAS,EAAGU,SAArB;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCACE;AAAK,gBAAA,GAAG,EAAGE,aAAX;AAA2B,gBAAA,GAAG,EAAGC,cAAjC;AAAkD,gBAAA,SAAS,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAI,gBAAA,SAAS,EAAC,aAAd;AAA4B,+BAAY,aAAxC;AAAA,0BAAuDC;AAAvD;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAI,gBAAA,SAAS,EAAC,aAAd;AAA4B,+BAAY,YAAxC;AAAA,0BAAsDD;AAAtD;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAS,YAAA,SAAS,EAAC,oBAAnB;AAAA,sBACGZ,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAAH,GACJD,MAAM,CAACe,KAAP,CAAa,CAAb,EAAgBC,GAAhB,CAAoB,CAACC,KAAD,EAAQC,KAAR,kBACpB,QAAC,SAAD;AAEE,cAAA,KAAK,EAAGD;AAFV,eACS,GAAEA,KAAK,CAACE,OAAQ,IAAGD,KAAM,EADlC;AAAA;AAAA;AAAA;AAAA,oBADA;AAFN;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAqBD;;AACD,wBACE;AAAK,qBAAY;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAhDiC;;AAmDpCtB,KAAK,CAACwB,SAAN,GAAkB;AAChBjB,EAAAA,KAAK,EAAEX,SAAS,CAAC6B,KAAV,CAAgB;AACrBjB,IAAAA,MAAM,EAAEZ,SAAS,CAAC6B,KAAV,CAAgB;AACtBhB,MAAAA,EAAE,EAAEb,SAAS,CAAC8B,MAAV,CAAiBC;AADC,KAAhB,EAELA;AAHkB,GAAhB,EAIJA;AALa,CAAlB;AAQA,eAAe3B,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\nimport MusicCard from '../components/MusicCard';\nimport '../css/Album.css';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      musics: [],\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    getMusics(id).then((musics) => this.setState({ musics, loading: false }));\n  }\n\n  render() {\n    const { loading, musics } = this.state;\n    let cardClass = 'col-xs-12 col-sm-4 d-flex ';\n    cardClass += 'flex-column justify-content-center align-items-center border-cards';\n    if (musics.length > 0) {\n      const {\n        artworkUrl100,\n        collectionName,\n        artistName } = musics[0];\n      return (\n        <div data-testid=\"page-album\" className=\"container py-4\">\n          <div className=\"row justify-content-between\">\n            <section className={ cardClass }>\n              <div className=\"album-fixed\">\n                <img src={ artworkUrl100 } alt={ collectionName } className=\"album-img\" />\n                <h2 className=\"text-center\" data-testid=\"artist-name\">{artistName}</h2>\n                <h3 className=\"text-center\" data-testid=\"album-name\">{collectionName}</h3>\n              </div>\n            </section>\n            <section className=\"col-xs-12 col-sm-8\">\n              {loading ? <Loading />\n                : musics.slice(1).map((music, index) => (\n                  <MusicCard\n                    key={ `${music.trackId}-${index}` }\n                    music={ music }\n                  />))}\n            </section>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div data-testid=\"page-album\" />\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}