{"ast":null,"code":"import _objectSpread from\"/home/paulo/gh-pages/TrybeTunes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var USER_KEY='user';var TIMEOUT=1500;var SUCCESS_STATUS='OK';var readUser=function readUser(){return JSON.parse(localStorage.getItem(USER_KEY));};var saveUser=function saveUser(user){return localStorage.setItem(USER_KEY,JSON.stringify(user));};// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\nvar simulateRequest=function simulateRequest(response){return function(callback){setTimeout(function(){callback(response);},TIMEOUT);};};export var getUser=function getUser(){return new Promise(function(resolve){var user=readUser();if(user===null){user={};}simulateRequest(user)(resolve);});};export var createUser=function createUser(user){return new Promise(function(resolve){var emptyUser={name:'',email:'',image:'',description:''};saveUser(_objectSpread(_objectSpread({},emptyUser),user));simulateRequest(SUCCESS_STATUS)(resolve);});};export var updateUser=function updateUser(updatedUser){return new Promise(function(resolve){saveUser(_objectSpread({},updatedUser));simulateRequest(SUCCESS_STATUS)(resolve);});};","map":{"version":3,"sources":["/home/paulo/gh-pages/TrybeTunes/src/services/userAPI.js"],"names":["USER_KEY","TIMEOUT","SUCCESS_STATUS","readUser","JSON","parse","localStorage","getItem","saveUser","user","setItem","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","createUser","emptyUser","name","email","image","description","updateUser","updatedUser"],"mappings":"qJAAA,GAAMA,CAAAA,QAAQ,CAAG,MAAjB,CACA,GAAMC,CAAAA,OAAO,CAAG,IAAhB,CACA,GAAMC,CAAAA,cAAc,CAAG,IAAvB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAMC,CAAAA,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBP,QAArB,CAAX,CAAN,EAAjB,CACA,GAAMQ,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,QAAUH,CAAAA,YAAY,CAACI,OAAb,CAAqBV,QAArB,CAA+BI,IAAI,CAACO,SAAL,CAAeF,IAAf,CAA/B,CAAV,EAAjB,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,QAAD,QAAc,UAACC,QAAD,CAAc,CAClDC,UAAU,CAAC,UAAM,CACfD,QAAQ,CAACD,QAAD,CAAR,CACD,CAFS,CAEPZ,OAFO,CAAV,CAGD,CAJuB,EAAxB,CAMA,MAAO,IAAMe,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,SAAM,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CACpD,GAAIT,CAAAA,IAAI,CAAGN,QAAQ,EAAnB,CACA,GAAIM,IAAI,GAAK,IAAb,CAAmB,CACjBA,IAAI,CAAG,EAAP,CACD,CACDG,eAAe,CAACH,IAAD,CAAf,CAAsBS,OAAtB,EACD,CAN4B,CAAN,EAAhB,CAQP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACV,IAAD,QAAU,IAAIQ,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CAC3D,GAAME,CAAAA,SAAS,CAAG,CAChBC,IAAI,CAAE,EADU,CAEhBC,KAAK,CAAE,EAFS,CAGhBC,KAAK,CAAE,EAHS,CAIhBC,WAAW,CAAE,EAJG,CAAlB,CAMAhB,QAAQ,gCAAMY,SAAN,EAAoBX,IAApB,EAAR,CACAG,eAAe,CAACV,cAAD,CAAf,CAAgCgB,OAAhC,EACD,CATmC,CAAV,EAAnB,CAWP,MAAO,IAAMO,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,WAAD,QAAiB,IAAIT,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CAClEV,QAAQ,kBAAMkB,WAAN,EAAR,CACAd,eAAe,CAACV,cAAD,CAAf,CAAgCgB,OAAhC,EACD,CAH0C,CAAjB,EAAnB","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n"]},"metadata":{},"sourceType":"module"}